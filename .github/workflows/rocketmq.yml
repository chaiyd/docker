name: rocketmq docker build & push

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  ROCKETMQ_VER: '4.9.4'

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            chaiyd/rocketmq

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
          
      - name: Build and push Docker image for ROCKETMQ
        uses: docker/build-push-action@v2
        with:
          context: ./rocketmq
          file: ./rocketmq/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            ROCKETMQ_VER=${{ env.ROCKETMQ_VER }}
          tags: |
            chaiyd/rocketmq:rocketmq-${{ env.ROCKETMQ_VER }}
            chaiyd/rocketmq:${{ env.ROCKETMQ_VER }}
          labels: chaiyd/rocketmq:rocketmq-${{ env.ROCKETMQ_VER }}

      - name: Build and push Docker image for rocketmq-broker
        uses: docker/build-push-action@v2
        with:
          context: ./rocketmq/rocketmq-broker
          file: ./rocketmq/rocketmq-broker/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            ROCKETMQ_VER=${{ env.ROCKETMQ_VER }}
          tags: |
            chaiyd/rocketmq:rocketmq-broker-${{ env.ROCKETMQ_VER }}
            chaiyd/rocketmq:broker-${{ env.ROCKETMQ_VER }}
          labels: chaiyd/rocketmq:rocketmq-broker-${{ env.ROCKETMQ_VER }}

      - name: Build and push Docker image for rocketmq-namesrv
        uses: docker/build-push-action@v2
        with:
          context: ./rocketmq/rocketmq-namesrv
          file: ./rocketmq/rocketmq-namesrv/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            ROCKETMQ_VER=${{ env.ROCKETMQ_VER }}
          tags: |
            chaiyd/rocketmq:rocketmq-namesrv-${{ env.ROCKETMQ_VER }}
            chaiyd/rocketmq:namesrv-${{ env.ROCKETMQ_VER }}
          labels: chaiyd/rocketmq:rocketmq-namesrv-${{ env.ROCKETMQ_VER }}

      - name: scan_rocketmq
        uses: anchore/scan-action@v3
        with:
          image: |
            chaiyd/rocketmq:${{ env.ROCKETMQ_VER }}
          acs-report-enable: true
          fail-build: false
      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif
          category: scan_rocketmq

      - name: scan_broker
        uses: anchore/scan-action@v3
        id: scan_broker
        with:
          image: |
            chaiyd/rocketmq:broker-${{ env.ROCKETMQ_VER }}
          acs-report-enable: true
          fail-build: false
      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif
          category: scan_broker

      - name: scan_namesrv
        uses: anchore/scan-action@v3
        with:
          image: chaiyd/rocketmq:namesrv-${{ env.ROCKETMQ_VER }} 
          acs-report-enable: true
          fail-build: false   
          category: scan_namesrv
      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif
          category: scan_namesrv

