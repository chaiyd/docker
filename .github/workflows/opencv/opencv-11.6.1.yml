name: opencv

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_HUB: 'chaiyd/conda'
  CUDA_VER: 'py39_4.12.0-cuda11.6.1-cudnn8-devel'
  OPENCV_VER: '4.5.5'

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest #macos-latest
    permissions:
      security-events: write
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            chaiyd/opencv

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
          
      - name: Build and push Docker images & ubuntu18.04
        uses: docker/build-push-action@v2
        with:
          context: ./opencv/ubuntu
          file: ./opencv/ubuntu/Dockerfile
            #platforms: linux/amd64,linux/arm64  
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            UBUNTU_VER=ubuntu18.04
            CUDA_VER=${{ env.CUDA_VER }}
            DOCKER_HUB=${{ env.DOCKER_HUB }}
            OPENCV_VER=${{ env.OPENCV_VER }}
          tags: chaiyd/opencv:${{ env.OPENCV_VER }}-${{ env.CUDA_VER }}-ubuntu18.04
          labels: chaiyd/opencv:${{ env.OPENCV_VER }}-${{ env.CUDA_VER }}-ubuntu18.04

      - name: Build and push Docker images & ubuntu20.04
        uses: docker/build-push-action@v2
        with:
          context: ./opencv/ubuntu
          file: ./opencv/ubuntu/Dockerfile
          #platforms: linux/amd64,linux/arm64  
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            UBUNTU_VER=ubuntu20.04
            CUDA_VER=${{ env.CUDA_VER }}
            DOCKER_HUB=${{ env.DOCKER_HUB }}
            OPENCV_VER=${{ env.OPENCV_VER }}
          tags: chaiyd/opencv:${{ env.OPENCV_VER }}-${{ env.CUDA_VER }}-ubuntu20.04
          labels: chaiyd/opencv:${{ env.OPENCV_VER }}-${{ env.CUDA_VER }}-ubuntu20.04
